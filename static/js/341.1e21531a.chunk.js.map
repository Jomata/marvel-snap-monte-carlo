{"version":3,"file":"static/js/341.1e21531a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","models/constants.ts","data/cards.ts","models/Card.ts","helpers/randomElement.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","helpers/check.ts","models/Game.ts","helpers/shuffle.ts","models/Sim.ts","workers/sim.worker.ts"],"sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export const DEBUG = {\r\n    CSS_CARD_NAME : \"color:rgb(255,125,233)\",\r\n    CSS_ENERGY:\"color:green\",\r\n}","//id, name, cost, power\r\nexport const cardsData:[CardID,CardName,number,number][] = [\r\n  [\"Abomination\",\"Abomination\",5,9],\r\n  [\"AbsorbingMan\",\"Absorbing Man\",4,3],\r\n  [\"AdamWarlock\",\"Adam Warlock\",2,0],\r\n  [\"Aero\",\"Aero\",5,7],\r\n  [\"AgathaHarkness\",\"Agatha Harkness\",6,14],\r\n  [\"Agent13\",\"Agent 13\",1,2],\r\n  [\"AgentCoulson\",\"Agent Coulson\",3,4],\r\n  [\"AmericaChavez\",\"America Chavez\",6,9],\r\n  [\"Angel\",\"Angel\",1,2],\r\n  [\"Angela\",\"Angela\",2,0],\r\n  [\"AntMan\",\"Ant Man\",1,1],\r\n  [\"Apocalypse\",\"Apocalypse\",6,8],\r\n  [\"Armor\",\"Armor\",2,3],\r\n  [\"ArnimZola\",\"Arnim Zola\",6,0],\r\n  [\"Attuma\",\"Attuma\",4,10],\r\n  [\"BaronMordo\",\"Baron Mordo\",2,3],\r\n  [\"Bast\",\"Bast\",1,1],\r\n  [\"Beast\",\"Beast\",2,2],\r\n  [\"Bishop\",\"Bishop\",3,1],\r\n  [\"BlackBolt\",\"Black Bolt\",5,8],\r\n  [\"BlackCat\",\"Black Cat\",3,7],\r\n  [\"BlackPanther\",\"Black Panther\",5,4],\r\n  [\"BlackWidow\",\"Black Widow\",2,1],\r\n  [\"Blade\",\"Blade\",1,3],\r\n  [\"BlueMarvel\",\"Blue Marvel\",5,3],\r\n  [\"Brood\",\"Brood\",3,2],\r\n  [\"BuckyBarnes\",\"Bucky Barnes\",2,1],\r\n  [\"Cable\",\"Cable\",2,2],\r\n  [\"CaptainAmerica\",\"Captain America\",3,3],\r\n  [\"CaptainMarvel\",\"Captain Marvel\",5,6],\r\n  [\"Carnage\",\"Carnage\",2,2],\r\n  [\"Cerebro\",\"Cerebro\",3,0],\r\n  [\"Cloak\",\"Cloak\",2,4],\r\n  [\"ColleenWing\",\"Colleen Wing\",2,4],\r\n  [\"Colossus\",\"Colossus\",2,3],\r\n  [\"Cosmo\",\"Cosmo\",3,3],\r\n  [\"Crossbones\",\"Crossbones\",4,8],\r\n  [\"Crystal\",\"Crystal\",4,4],\r\n  [\"Cyclops\",\"Cyclops\",3,4],\r\n  [\"Dagger\",\"Dagger\",2,1],\r\n  [\"Daredevil\",\"Daredevil\",2,2],\r\n  [\"Darkhawk\",\"Darkhawk\",4,1],\r\n  [\"Dazzler\",\"Dazzler\",4,4],\r\n  [\"Deadpool\",\"Deadpool\",1,1],\r\n  [\"Death\",\"Death\",9,12],\r\n  [\"Deathlok\",\"Deathlok\",3,5],\r\n  [\"Debrii\",\"Debrii\",3,3],\r\n  [\"Destroyer\",\"Destroyer\",6,15],\r\n  [\"DevilDinosaur\",\"Devil Dinosaur\",5,3],\r\n  [\"DoctorOctopus\",\"Doctor Octopus\",5,10],\r\n  [\"DoctorStrange\",\"Doctor Strange\",3,3],\r\n  [\"Domino\",\"Domino\",2,3],\r\n  [\"Dracula\",\"Dracula\",4,0],\r\n  [\"Drax\",\"Drax\",4,5],\r\n  [\"DrDoom\",\"Doctor Doom\",6,5],\r\n  [\"EbonyMaw\",\"Ebony Maw\",1,7],\r\n  [\"Electro\",\"Electro\",3,2],\r\n  [\"Elektra\",\"Elektra\",1,1],\r\n  [\"Enchantress\",\"Enchantress\",4,4],\r\n  [\"Falcon\",\"Falcon\",2,3],\r\n  [\"Forge\",\"Forge\",2,1],\r\n  [\"Galactus\",\"Galactus\",6,2],\r\n  [\"Gambit\",\"Gambit\",3,1],\r\n  [\"Gamora\",\"Gamora\",5,7],\r\n  [\"Ghost\",\"Ghost\",1,2],\r\n  [\"GhostRider\",\"Ghost Rider\",4,3],\r\n  [\"Giganto\",\"Giganto\",6,14],\r\n  [\"Goose\",\"Goose\",2,2],\r\n  [\"GreenGoblin\",\"Green Goblin\",3,-3],\r\n  [\"Groot\",\"Groot\",3,4],\r\n  [\"Hawkeye\",\"Hawkeye\",1,1],\r\n  [\"Hazmat\",\"Hazmat\",2,2],\r\n  [\"Heimdall\",\"Heimdall\",6,8],\r\n  [\"Hela\",\"Hela\",6,6],\r\n  [\"Helicarrier\",\"Helicarrier\",6,10],\r\n  [\"Hellcow\",\"Hellcow\",4,6],\r\n  [\"Hobgoblin\",\"Hobgoblin\",5,-8],\r\n  [\"Hood\",\"The Hood\",1,-2],\r\n  [\"Hulk\",\"Hulk\",6,12],\r\n  [\"Hulkbuster\",\"Hulkbuster\",3,4],\r\n  [\"HumanTorch\",\"Human Torch\",1,2],\r\n  [\"Iceman\",\"Iceman\",1,2],\r\n  [\"Infinaut\",\"The Infinaut\",6,20],\r\n  [\"InvisibleWoman\",\"Invisible Woman\",2,2],\r\n  [\"IronFist\",\"Iron Fist\",1,2],\r\n  [\"Ironheart\",\"Ironheart\",3,0],\r\n  [\"IronMan\",\"Iron Man\",5,0],\r\n  [\"JaneFoster\",\"Jane Foster Mighty Thor\",5,8],\r\n  [\"JeffTheBabyLandShark\",\"Jeff the Baby Land Shark\",2,3],\r\n  [\"JessicaJones\",\"Jessica Jones\",4,4],\r\n  [\"Jubilee\",\"Jubilee\",4,1],\r\n  [\"Juggernaut\",\"Juggernaut\",3,3],\r\n  [\"Kang\",\"Kang\",5,0],\r\n  [\"KaZar\",\"Ka-Zar\",4,4],\r\n  [\"Killmonger\",\"Killmonger\",3,3],\r\n  [\"Kingpin\",\"Kingpin\",3,4],\r\n  [\"KittyPryde\",\"Kitty Pryde\",1,2],\r\n  [\"Klaw\",\"Klaw\",5,4],\r\n  [\"Knull\",\"Knull\",6,0],\r\n  [\"Korg\",\"Korg\",1,2],\r\n  [\"Kraven\",\"Kraven\",2,2],\r\n  [\"LadySif\",\"Lady Sif\",3,4],\r\n  [\"Leader\",\"Leader\",6,7],\r\n  [\"Leech\",\"Leech\",5,3],\r\n  [\"LivingTribunal\",\"The Living Tribunal\",6,4],\r\n  [\"Lizard\",\"Lizard\",2,5],\r\n  [\"Lockjaw\",\"Lockjaw\",3,2],\r\n  [\"LukeCage\",\"Luke Cage\",2,1],\r\n  [\"Magik\",\"Magik\",5,3],\r\n  [\"Magneto\",\"Magneto\",6,12],\r\n  [\"Mantis\",\"Mantis\",1,2],\r\n  [\"MariaHill\",\"Maria Hill\",2,3],\r\n  [\"MasterMold\",\"Master Mold\",2,2],\r\n  [\"Maximus\",\"Maximus\",3,7],\r\n  [\"MBaku\",\"M'Baku\",1,2],\r\n  [\"Medusa\",\"Medusa\",2,2],\r\n  [\"MilesMorales\",\"Miles Morales\",4,5],\r\n  [\"MistyKnight\",\"Misty Knight\",1,2],\r\n  [\"Modok\",\"MODOK\",5,8],\r\n  [\"Mojo\",\"Mojo\",2,2],\r\n  [\"MoonGirl\",\"Moon Girl\",4,4],\r\n  [\"MoonKnight\",\"Moon Knight\",3,3],\r\n  [\"Morbius\",\"Morbius\",2,0],\r\n  [\"Morph\",\"Morph\",3,0],\r\n  [\"MrFantastic\",\"Mister Fantastic\",3,2],\r\n  [\"MrNegative\",\"Mister Negative\",4,-1],\r\n  [\"MrSinister\",\"Mister Sinister\",2,2],\r\n  [\"MultipleMan\",\"Multiple Man\",2,3],\r\n  [\"Mysterio\",\"Mysterio\",2,4],\r\n  [\"Mystique\",\"Mystique\",3,0],\r\n  [\"Nakia\",\"Nakia\",3,2],\r\n  [\"Namor\",\"Namor\",4,5],\r\n  [\"NegasonicTeenageWarhead\",\"Negasonic Teenage Warhead\",3,2],\r\n  [\"NickFury\",\"Nick Fury\",5,7],\r\n  [\"Nightcrawler\",\"Nightcrawler\",1,2],\r\n  [\"Nimrod\",\"Nimrod\",5,5],\r\n  [\"Nova\",\"Nova\",1,1],\r\n  [\"Odin\",\"Odin\",6,8],\r\n  [\"Okoye\",\"Okoye\",2,2],\r\n  [\"OmegaRed\",\"Omega Red\",4,5],\r\n  [\"Onslaught\",\"Onslaught\",6,7],\r\n  [\"Orka\",\"Orka\",6,9],\r\n  [\"Patriot\",\"Patriot\",3,1],\r\n  [\"Polaris\",\"Polaris\",3,5],\r\n  [\"ProfessorX\",\"Professor X\",5,3],\r\n  [\"Psylocke\",\"Psylocke\",2,1],\r\n  [\"Punisher\",\"Punisher\",3,2],\r\n  [\"Quake\",\"Quake\",2,3],\r\n  [\"Quicksilver\",\"Quicksilver\",1,2],\r\n  [\"Quinjet\",\"Quinjet\",1,2],\r\n  [\"RedSkull\",\"Red Skull\",5,15],\r\n  [\"Rescue\",\"Rescue\",4,4],\r\n  [\"Rhino\",\"Rhino\",3,3],\r\n  [\"RocketRaccoon\",\"Rocket Raccoon\",1,2],\r\n  [\"Rockslide\",\"Rockslide\",4,6],\r\n  [\"Rogue\",\"Rogue\",3,1],\r\n  [\"Ronan\",\"Ronan the Accuser\",5,3],\r\n  [\"Sabretooth\",\"Sabretooth\",3,4],\r\n  [\"Sandman\",\"Sandman\",4,1],\r\n  [\"Sauron\",\"Sauron\",3,3],\r\n  [\"ScarletWitch\",\"Scarlet Witch\",2,3],\r\n  [\"Scorpion\",\"Scorpion\",2,2],\r\n  [\"Sentinel\",\"Sentinel\",2,3],\r\n  [\"Sentry\",\"Sentry\",4,8],\r\n  [\"Sera\",\"Sera\",5,4],\r\n  [\"ShadowKing\",\"Shadow King\",4,3],\r\n  [\"ShangChi\",\"Shang-Chi\",4,3],\r\n  [\"Shanna\",\"Shanna\",4,2],\r\n  [\"SheHulk\",\"She-Hulk\",6,10],\r\n  [\"Shocker\",\"Shocker\",2,3],\r\n  [\"Shuri\",\"Shuri\",4,2],\r\n  [\"SilverSurfer\",\"Silver Surfer\",3,2],\r\n  [\"Spectrum\",\"Spectrum\",6,5],\r\n  [\"SpiderMan\",\"Spider-Man\",4,3],\r\n  [\"SpiderWoman\",\"Spider-Woman\",5,7],\r\n  [\"SquirrelGirl\",\"Squirrel Girl\",1,1],\r\n  [\"Starlord\",\"Star-Lord\",2,2],\r\n  [\"Stature\",\"Stature\",5,7],\r\n  [\"Storm\",\"Storm\",3,2],\r\n  [\"StrongGuy\",\"Strong Guy\",4,4],\r\n  [\"Sunspot\",\"Sunspot\",1,1],\r\n  [\"SuperSkrull\",\"Super-Skrull\",4,2],\r\n  [\"Swarm\",\"Swarm\",2,3],\r\n  [\"SwordMaster\",\"Sword Master\",3,6],\r\n  [\"Taskmaster\",\"Taskmaster\",5,0],\r\n  [\"Thanos\",\"Thanos\",6,8],\r\n  [\"TheCollector\",\"The Collector\",2,1],\r\n  [\"TheThing\",\"The Thing\",4,6],\r\n  [\"Thor\",\"Thor\",3,4],\r\n  [\"Titania\",\"Titania\",1,5],\r\n  [\"TyphoidMary\",\"Typhoid Mary\",4,10],\r\n  [\"Uatu\",\"Uatu the Watcher\",1,2],\r\n  [\"Ultron\",\"Ultron\",6,8],\r\n  [\"Valkyrie\",\"Valkyrie\",5,3],\r\n  [\"Venom\",\"Venom\",3,1],\r\n  [\"Viper\",\"Viper\",2,3],\r\n  [\"Vision\",\"Vision\",5,7],\r\n  [\"Vulture\",\"Vulture\",3,3],\r\n  [\"Warpath\",\"Warpath\",4,5],\r\n  [\"Wasp\",\"Wasp\",0,1],\r\n  [\"Wave\",\"Wave\",3,3],\r\n  [\"WhiteQueen\",\"White Queen\",4,6],\r\n  [\"WhiteTiger\",\"White Tiger\",5,1],\r\n  [\"Wolfsbane\",\"Wolfsbane\",3,1],\r\n  [\"Wolverine\",\"Wolverine\",2,2],\r\n  [\"Wong\",\"Wong\",4,2],\r\n  [\"Yellowjacket\",\"Yellowjacket\",0,2],\r\n  [\"Yondu\",\"Yondu\",1,2],\r\n  [\"Zabu\",\"Zabu\",2,2],\r\n  [\"Zero\",\"Zero\",1,3],\r\n]\r\n\r\nexport const CARD_IDS = [\r\n  \"Abomination\",\r\n\"AbsorbingMan\",\r\n\"AdamWarlock\",\r\n\"Aero\",\r\n\"AgathaHarkness\",\r\n\"Agent13\",\r\n\"AgentCoulson\",\r\n\"AmericaChavez\",\r\n\"Angel\",\r\n\"Angela\",\r\n\"AntMan\",\r\n\"Apocalypse\",\r\n\"Armor\",\r\n\"ArnimZola\",\r\n\"Attuma\",\r\n\"BaronMordo\",\r\n\"Bast\",\r\n\"Beast\",\r\n\"Bishop\",\r\n\"BlackBolt\",\r\n\"BlackCat\",\r\n\"BlackPanther\",\r\n\"BlackWidow\",\r\n\"Blade\",\r\n\"BlueMarvel\",\r\n\"Brood\",\r\n\"BuckyBarnes\",\r\n\"Cable\",\r\n\"CaptainAmerica\",\r\n\"CaptainMarvel\",\r\n\"Carnage\",\r\n\"Cerebro\",\r\n\"Cloak\",\r\n\"ColleenWing\",\r\n\"Colossus\",\r\n\"Cosmo\",\r\n\"Crossbones\",\r\n\"Crystal\",\r\n\"Cyclops\",\r\n\"Dagger\",\r\n\"Daredevil\",\r\n\"Darkhawk\",\r\n\"Dazzler\",\r\n\"Deadpool\",\r\n\"Death\",\r\n\"Deathlok\",\r\n\"Debrii\",\r\n\"Destroyer\",\r\n\"DevilDinosaur\",\r\n\"DoctorOctopus\",\r\n\"DoctorStrange\",\r\n\"Domino\",\r\n\"Dracula\",\r\n\"Drax\",\r\n\"DrDoom\",\r\n\"EbonyMaw\",\r\n\"Electro\",\r\n\"Elektra\",\r\n\"Enchantress\",\r\n\"Falcon\",\r\n\"Forge\",\r\n\"Galactus\",\r\n\"Gambit\",\r\n\"Gamora\",\r\n\"Ghost\",\r\n\"GhostRider\",\r\n\"Giganto\",\r\n\"Goose\",\r\n\"GreenGoblin\",\r\n\"Groot\",\r\n\"Hawkeye\",\r\n\"Hazmat\",\r\n\"Heimdall\",\r\n\"Hela\",\r\n\"Helicarrier\",\r\n\"Hellcow\",\r\n\"Hobgoblin\",\r\n\"Hood\",\r\n\"Hulk\",\r\n\"Hulkbuster\",\r\n\"HumanTorch\",\r\n\"Iceman\",\r\n\"Infinaut\",\r\n\"InvisibleWoman\",\r\n\"IronFist\",\r\n\"Ironheart\",\r\n\"IronMan\",\r\n\"JaneFoster\",\r\n\"JeffTheBabyLandShark\",\r\n\"JessicaJones\",\r\n\"Jubilee\",\r\n\"Juggernaut\",\r\n\"Kang\",\r\n\"KaZar\",\r\n\"Killmonger\",\r\n\"Kingpin\",\r\n\"KittyPryde\",\r\n\"Klaw\",\r\n\"Knull\",\r\n\"Korg\",\r\n\"Kraven\",\r\n\"LadySif\",\r\n\"Leader\",\r\n\"Leech\",\r\n\"LivingTribunal\",\r\n\"Lizard\",\r\n\"Lockjaw\",\r\n\"LukeCage\",\r\n\"Magik\",\r\n\"Magneto\",\r\n\"Mantis\",\r\n\"MariaHill\",\r\n\"MasterMold\",\r\n\"Maximus\",\r\n\"MBaku\",\r\n\"Medusa\",\r\n\"MilesMorales\",\r\n\"MistyKnight\",\r\n\"Modok\",\r\n\"Mojo\",\r\n\"MoonGirl\",\r\n\"MoonKnight\",\r\n\"Morbius\",\r\n\"Morph\",\r\n\"MrFantastic\",\r\n\"MrNegative\",\r\n\"MrSinister\",\r\n\"MultipleMan\",\r\n\"Mysterio\",\r\n\"Mystique\",\r\n\"Nakia\",\r\n\"Namor\",\r\n\"NegasonicTeenageWarhead\",\r\n\"NickFury\",\r\n\"Nightcrawler\",\r\n\"Nimrod\",\r\n\"Nova\",\r\n\"Odin\",\r\n\"Okoye\",\r\n\"OmegaRed\",\r\n\"Onslaught\",\r\n\"Orka\",\r\n\"Patriot\",\r\n\"Polaris\",\r\n\"ProfessorX\",\r\n\"Psylocke\",\r\n\"Punisher\",\r\n\"Quake\",\r\n\"Quicksilver\",\r\n\"Quinjet\",\r\n\"RedSkull\",\r\n\"Rescue\",\r\n\"Rhino\",\r\n\"RocketRaccoon\",\r\n\"Rockslide\",\r\n\"Rogue\",\r\n\"Ronan\",\r\n\"Sabretooth\",\r\n\"Sandman\",\r\n\"Sauron\",\r\n\"ScarletWitch\",\r\n\"Scorpion\",\r\n\"Sentinel\",\r\n\"Sentry\",\r\n\"Sera\",\r\n\"ShadowKing\",\r\n\"ShangChi\",\r\n\"Shanna\",\r\n\"SheHulk\",\r\n\"Shocker\",\r\n\"Shuri\",\r\n\"SilverSurfer\",\r\n\"Spectrum\",\r\n\"SpiderMan\",\r\n\"SpiderWoman\",\r\n\"SquirrelGirl\",\r\n\"Starlord\",\r\n\"Stature\",\r\n\"Storm\",\r\n\"StrongGuy\",\r\n\"Sunspot\",\r\n\"SuperSkrull\",\r\n\"Swarm\",\r\n\"SwordMaster\",\r\n\"Taskmaster\",\r\n\"Thanos\",\r\n\"TheCollector\",\r\n\"TheThing\",\r\n\"Thor\",\r\n\"Titania\",\r\n\"TyphoidMary\",\r\n\"Uatu\",\r\n\"Ultron\",\r\n\"Valkyrie\",\r\n\"Venom\",\r\n\"Viper\",\r\n\"Vision\",\r\n\"Vulture\",\r\n\"Warpath\",\r\n\"Wasp\",\r\n\"Wave\",\r\n\"WhiteQueen\",\r\n\"WhiteTiger\",\r\n\"Wolfsbane\",\r\n\"Wolverine\",\r\n\"Wong\",\r\n\"Yellowjacket\",\r\n\"Yondu\",\r\n\"Zabu\",\r\n\"Zero\",\r\n] as const\r\n\r\n//TODO: Figure out how to get this list from cardsData\r\nexport const CARD_NAMES = [\r\n  \"Abomination\",\r\n  \"Absorbing Man\",\r\n  \"Adam Warlock\",\r\n  \"Aero\",\r\n  \"Agatha Harkness\",\r\n  \"Agent 13\",\r\n  \"Agent Coulson\",\r\n  \"America Chavez\",\r\n  \"Angel\",\r\n  \"Angela\",\r\n  \"Ant Man\",\r\n  \"Apocalypse\",\r\n  \"Armor\",\r\n  \"Arnim Zola\",\r\n  \"Attuma\",\r\n  \"Baron Mordo\",\r\n  \"Bast\",\r\n  \"Beast\",\r\n  \"Bishop\",\r\n  \"Black Bolt\",\r\n  \"Black Cat\",\r\n  \"Black Panther\",\r\n  \"Black Widow\",\r\n  \"Blade\",\r\n  \"Blue Marvel\",\r\n  \"Brood\",\r\n  \"Bucky Barnes\",\r\n  \"Cable\",\r\n  \"Captain America\",\r\n  \"Captain Marvel\",\r\n  \"Carnage\",\r\n  \"Cerebro\",\r\n  \"Cloak\",\r\n  \"Colleen Wing\",\r\n  \"Colossus\",\r\n  \"Cosmo\",\r\n  \"Crossbones\",\r\n  \"Crystal\",\r\n  \"Cyclops\",\r\n  \"Dagger\",\r\n  \"Daredevil\",\r\n  \"Darkhawk\",\r\n  \"Dazzler\",\r\n  \"Deadpool\",\r\n  \"Death\",\r\n  \"Deathlok\",\r\n  \"Debrii\",\r\n  \"Destroyer\",\r\n  \"Devil Dinosaur\",\r\n  \"Doctor Octopus\",\r\n  \"Doctor Strange\",\r\n  \"Domino\",\r\n  \"Dracula\",\r\n  \"Drax\",\r\n  \"Doctor Doom\",\r\n  \"Ebony Maw\",\r\n  \"Electro\",\r\n  \"Elektra\",\r\n  \"Enchantress\",\r\n  \"Falcon\",\r\n  \"Forge\",\r\n  \"Galactus\",\r\n  \"Gambit\",\r\n  \"Gamora\",\r\n  \"Ghost\",\r\n  \"Ghost Rider\",\r\n  \"Giganto\",\r\n  \"Goose\",\r\n  \"Green Goblin\",\r\n  \"Groot\",\r\n  \"Hawkeye\",\r\n  \"Hazmat\",\r\n  \"Heimdall\",\r\n  \"Hela\",\r\n  \"Helicarrier\",\r\n  \"Hellcow\",\r\n  \"Hobgoblin\",\r\n  \"The Hood\",\r\n  \"Hulk\",\r\n  \"Hulkbuster\",\r\n  \"Human Torch\",\r\n  \"Iceman\",\r\n  \"The Infinaut\",\r\n  \"Invisible Woman\",\r\n  \"Iron Fist\",\r\n  \"Ironheart\",\r\n  \"Iron Man\",\r\n  \"Jane Foster Mighty Thor\",\r\n  \"Jeff the Baby Land Shark\",\r\n  \"Jessica Jones\",\r\n  \"Jubilee\",\r\n  \"Juggernaut\",\r\n  \"Kang\",\r\n  \"Ka-Zar\",\r\n  \"Killmonger\",\r\n  \"Kingpin\",\r\n  \"Kitty Pryde\",\r\n  \"Klaw\",\r\n  \"Knull\",\r\n  \"Korg\",\r\n  \"Kraven\",\r\n  \"Lady Sif\",\r\n  \"Leader\",\r\n  \"Leech\",\r\n  \"The Living Tribunal\",\r\n  \"Lizard\",\r\n  \"Lockjaw\",\r\n  \"Luke Cage\",\r\n  \"Magik\",\r\n  \"Magneto\",\r\n  \"Mantis\",\r\n  \"Maria Hill\",\r\n  \"Master Mold\",\r\n  \"Maximus\",\r\n  \"M'Baku\",\r\n  \"Medusa\",\r\n  \"Miles Morales\",\r\n  \"Misty Knight\",\r\n  \"MODOK\",\r\n  \"Mojo\",\r\n  \"Moon Girl\",\r\n  \"Moon Knight\",\r\n  \"Morbius\",\r\n  \"Morph\",\r\n  \"Mister Fantastic\",\r\n  \"Mister Negative\",\r\n  \"Mister Sinister\",\r\n  \"Multiple Man\",\r\n  \"Mysterio\",\r\n  \"Mystique\",\r\n  \"Nakia\",\r\n  \"Namor\",\r\n  \"Negasonic Teenage Warhead\",\r\n  \"Nick Fury\",\r\n  \"Nightcrawler\",\r\n  \"Nimrod\",\r\n  \"Nova\",\r\n  \"Odin\",\r\n  \"Okoye\",\r\n  \"Omega Red\",\r\n  \"Onslaught\",\r\n  \"Orka\",\r\n  \"Patriot\",\r\n  \"Polaris\",\r\n  \"Professor X\",\r\n  \"Psylocke\",\r\n  \"Punisher\",\r\n  \"Quake\",\r\n  \"Quicksilver\",\r\n  \"Quinjet\",\r\n  \"Red Skull\",\r\n  \"Rescue\",\r\n  \"Rhino\",\r\n  \"Rocket Raccoon\",\r\n  \"Rockslide\",\r\n  \"Rogue\",\r\n  \"Ronan the Accuser\",\r\n  \"Sabretooth\",\r\n  \"Sandman\",\r\n  \"Sauron\",\r\n  \"Scarlet Witch\",\r\n  \"Scorpion\",\r\n  \"Sentinel\",\r\n  \"Sentry\",\r\n  \"Sera\",\r\n  \"Shadow King\",\r\n  \"Shang-Chi\",\r\n  \"Shanna\",\r\n  \"She-Hulk\",\r\n  \"Shocker\",\r\n  \"Shuri\",\r\n  \"Silver Surfer\",\r\n  \"Spectrum\",\r\n  \"Spider-Man\",\r\n  \"Spider-Woman\",\r\n  \"Squirrel Girl\",\r\n  \"Star-Lord\",\r\n  \"Stature\",\r\n  \"Storm\",\r\n  \"Strong Guy\",\r\n  \"Sunspot\",\r\n  \"Super-Skrull\",\r\n  \"Swarm\",\r\n  \"Sword Master\",\r\n  \"Taskmaster\",\r\n  \"Thanos\",\r\n  \"The Collector\",\r\n  \"The Thing\",\r\n  \"Thor\",\r\n  \"Titania\",\r\n  \"Typhoid Mary\",\r\n  \"Uatu the Watcher\",\r\n  \"Ultron\",\r\n  \"Valkyrie\",\r\n  \"Venom\",\r\n  \"Viper\",\r\n  \"Vision\",\r\n  \"Vulture\",\r\n  \"Warpath\",\r\n  \"Wasp\",\r\n  \"Wave\",\r\n  \"White Queen\",\r\n  \"White Tiger\",\r\n  \"Wolfsbane\",\r\n  \"Wolverine\",\r\n  \"Wong\",\r\n  \"Yellowjacket\",\r\n  \"Yondu\",\r\n  \"Zabu\",\r\n  \"Zero\",\r\n] as const\r\n\r\nexport type CardID = typeof CARD_IDS[number]\r\nexport type CardName = typeof CARD_NAMES[number]\r\n\r\nexport function cardIDtoName(id:CardID):CardName {\r\n  return cardsData.find(cd => cd[0] === id)!![1]\r\n}","import randomElement from \"../helpers/randomElement\";\r\nimport { DEBUG } from \"./constants\";\r\nimport { CardName, cardsData } from \"../data/cards\";\r\nimport Game from \"./Game\";\r\n\r\nexport type CardProps = {\r\n    energy: number,\r\n    power: number,\r\n    revealed: boolean,\r\n}\r\n\r\nexport type CardEffects = {\r\n    onReveal:(game:Game) => Game\r\n}\r\n\r\nexport default class Card {\r\n\r\n    readonly name : CardName\r\n    readonly energy: number = 0\r\n    readonly power: number = 0\r\n    readonly revealed: boolean = false\r\n\r\n    //Probably need to move this to a better interface containing onReveal, ongoing, onDestroy, etc.\r\n    onReveal?:(game:Game) => Game;\r\n\r\n    constructor(name:CardName, props?:Partial<CardProps>, effects?:Partial<CardEffects>) {\r\n        this.name = name;\r\n        Object.assign(this, props);\r\n        Object.assign(this, effects);\r\n    }\r\n\r\n    //For now I'm putting the factory method in here, need to move it to a better place\r\n    static createFromName(name:CardName) : Card {\r\n        const cardData = cardsData.find(r => r[0] === name)\r\n        if(!cardData) return new Card(name)\r\n        \r\n        const baseCard = new Card(name, {energy:cardData[2], power:cardData[3]})\r\n\r\n        switch (name) {\r\n            case \"Bast\":\r\n                return baseCard.copy({}, {onReveal:(g => {\r\n                    const newHand = g.hand.map(c => c.copy({power:3}))\r\n                    return g.copy({hand:newHand})\r\n                })} )\r\n            case \"Electro\":\r\n                return baseCard.copy({}, {onReveal:(g => {\r\n                    return g.addHook({name:\"Electro onReveal\", oneTimeOnly:true, onTurnStart:(g => g.copy({baseEnergy: g.baseEnergy+1}))})\r\n                })} )\r\n            case \"Psylocke\":\r\n                return baseCard.copy({}, {onReveal:(g => {\r\n                    return g.addHook({name:\"Psylocke onReveal\", oneTimeOnly:true, onTurnStart:(g => g.copy({tempEnergy: g.tempEnergy+1}))})\r\n                })} )\r\n            case \"Zabu\":\r\n                return baseCard.copy({}); //TODO: Add Zabu ONGOING effect\r\n            case \"Jubilee\":\r\n                return baseCard.copy({}, {onReveal:(g => {\r\n                    const pull = randomElement(g.library)\r\n                    console.log(` > %c${name} %cpulls %c${pull.name}`, DEBUG.CSS_CARD_NAME, '', DEBUG.CSS_CARD_NAME)\r\n                    return g.copy({\r\n                        library: g.library.filter(c => c !== pull),\r\n                        field: g.field.concat(pull),\r\n                    })\r\n                })})\r\n            case \"Mister Negative\":\r\n                return baseCard.copy({}, {onReveal:(g => {\r\n                    const newLibrary = g.library.map(c => c.copy({power:c.energy, energy: Math.max(0, c.power)}))\r\n                    return g.copy({library:newLibrary})\r\n                })} )\r\n            default:\r\n                return baseCard;\r\n        }\r\n    }\r\n\r\n    copy(props?:Partial<CardProps>, effects?:Partial<CardEffects>) : Card {\r\n        return new Card(this.name, { ...this, ...props}, effects)\r\n    }\r\n\r\n    getEffectiveCost(game:Game) : number {\r\n        //Harcoding Zabu and Sera here for now\r\n        let cost = this.energy;\r\n        if(game.field.some(c => c.name === \"Sera\")) cost = Math.max(1, cost - 1) //-1 cost, minimum 1\r\n        //TODO: Store original cost somewhere for Zabu checking\r\n        if(game.field.some(c => c.name === \"Zabu\") && this.energy === 4) cost = cost -1 //-1 cost, no minimum\r\n        //TODO: Find a more elegant way to handle Wave\r\n        if(game.field.some(c => c.name === \"Wave\")) {\r\n            const thisTurn = game.turn\r\n            const wavePlayedLastTurn = game.history.some(g => g.turn === thisTurn - 1 && g.field.some(c => c.name === \"Wave\" && c.revealed === false))\r\n            if(wavePlayedLastTurn) return 4\r\n        }\r\n        \r\n        return cost\r\n    }\r\n\r\n    isPlayable(game:Game) : boolean {\r\n        return game.getAvailableEnergy() >= this.getEffectiveCost(game)\r\n    }\r\n\r\n    //Maybe this should also be in Game\r\n    revealCard(game:Game) : Game {\r\n        console.log(` > Revealing %c${this.name}`, DEBUG.CSS_CARD_NAME)\r\n        const revealedCard = this.copy({revealed:true})\r\n        const newBoard = game.copy({\r\n            field: game.field.filter(c => c !== this).concat(revealedCard)\r\n        })\r\n        if(this.onReveal) return this.onReveal(newBoard)\r\n        else return newBoard\r\n    }\r\n\r\n    public toString() {\r\n        return `${this.name} (${this.energy}/${this.power})`\r\n    }\r\n}","//https://stackoverflow.com/questions/5915096/get-a-random-item-from-a-javascript-array\r\nexport default function randomElement<T>(items:T[]):T {\r\n    return items[items.length * Math.random() | 0]\r\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function check(validation:boolean, error?:string|(()=>string)) {\r\n    if(!validation) {\r\n        let errorMessage = \"Check failed\"\r\n\r\n        if(typeof error === 'string') {\r\n            errorMessage = error\r\n        }\r\n        if(typeof error === 'function') {\r\n            errorMessage = error()\r\n        }\r\n        throw new Error(errorMessage)\r\n    }\r\n}","//An instance of a single Marvel Snap game.\r\n//Ignoring locations and oppo deck\r\nimport check from \"../helpers/check\";\r\nimport { shuffle } from \"../helpers/shuffle\";\r\nimport Card from \"./Card\";\r\nimport { CardName } from \"../data/cards\";\r\nimport { DEBUG } from './constants'\r\n\r\nexport type GameProps = {\r\n    //deck:Card[]\r\n    turn:number\r\n    hand:Card[]\r\n    library:Card[]\r\n    field:Card[]\r\n    baseEnergy:number\r\n    tempEnergy:number\r\n    usedEnergy:number\r\n}\r\n\r\nexport type GameHook = {\r\n    name?:string\r\n    oneTimeOnly:boolean\r\n    onTurnStart? :(game:Game) => Game\r\n}\r\n\r\n/**\r\n * Game flow\r\n * Game.startGame : Shuffles deck, resets field, draws opening hand of 3 cards\r\n * Game.startTurn: Starts the turn. Increases base energy by 1, cleans up temp energy, etc. \r\n * Game.playCard (n) : Plays the card. Card is still not revealed. \r\n * Game.endTurn : Ends the current turn. Reveals the cards played this turn, executing their onReveals if any\r\n * TODO: Keep track of turns started/ended, if mismatch throw error\r\n */\r\nexport default class Game {\r\n    public readonly deck:Card[]\r\n    public readonly turn:number = 0;\r\n\r\n    public readonly baseEnergy:number = 0;\r\n    public readonly tempEnergy:number = 0;\r\n    public readonly usedEnergy:number = 0;\r\n\r\n    public readonly hand:Card[] = [];\r\n    public readonly library:Card[] = [];\r\n    public readonly field:Card[] = [];\r\n\r\n    public readonly history:Game[] = []\r\n    readonly hooks:GameHook[] = []\r\n\r\n    constructor(deck:Card[], props?:Partial<GameProps>, hooks:GameHook[] = [], history:Game[] = []) {\r\n        this.deck = deck\r\n        Object.assign(this, props)\r\n        this.hooks = hooks;\r\n        this.history = history;\r\n        this.validateState()\r\n    }\r\n\r\n    private validateState() {\r\n        check(this.deck.length === 12, `deck.length is ${this.deck.length}`)\r\n        check(this.hand.length <= 7, `hand.length is ${this.hand.length}`)\r\n        check(this.turn >= 0 && this.turn <= 7, `turn is ${this.turn}`)\r\n    }\r\n\r\n    //Props overwrites whatever is set, hooks overwrites the whole array if set\r\n    copy(props?:Partial<GameProps>, hooks?:GameHook[]) : Game {\r\n        return new Game(this.deck, {...this, ...props}, hooks ?? this.hooks, [...this.history, this])\r\n    }\r\n\r\n    addHook(newHook:GameHook) : Game {\r\n        return this.copy({}, [...this.hooks, newHook])\r\n    }\r\n\r\n    debug() {\r\n        console.table({\r\n            turn: this.turn,\r\n            energy: this.getAvailableEnergy(),\r\n            hand: this.hand.map(c => c.name),\r\n            field: this.field.map(c => c.name),\r\n            library: this.library.map(c => c.name),\r\n        })\r\n    }\r\n\r\n    startGame() : Game {\r\n        const shuffledDeck = shuffle([...this.deck])\r\n        const openingHand = shuffledDeck.slice(0, 3)\r\n        const library = shuffledDeck.slice(3)\r\n        console.log(`Opening hand`, openingHand.map(c => c.name))\r\n        \r\n        return this.copy({\r\n            turn: 0,\r\n            baseEnergy: 0,\r\n            tempEnergy: 0,\r\n            hand: openingHand,\r\n            library: library,\r\n        }) \r\n    }\r\n\r\n    //Runs all of the onTurnStart hooks, deletes the disposable ones, and returns the new game state\r\n    private onTurnStart() : Game {\r\n        return this.hooks.reduce((acc, hook) => {\r\n            if(hook.onTurnStart) {\r\n                console.log(' > Running onTurnStart hook', hook.name)\r\n                const afterHook = hook.onTurnStart(acc)\r\n                if(hook.oneTimeOnly) {\r\n                    return afterHook.copy({}, acc.hooks.filter(h => h !== hook))\r\n                } else {\r\n                    return afterHook\r\n                }\r\n            } else {\r\n                return acc\r\n            }\r\n        }, this as Game);\r\n    }\r\n\r\n    startTurn() : Game {\r\n        console.log(`Turn ${this.turn+1} start`)\r\n        const drawThisTurn = this.hand.length < 7\r\n        const draw = this.library.slice(0, 1)[0]\r\n        if(drawThisTurn) console.log(` > Drew %c${draw.name}`, DEBUG.CSS_CARD_NAME)\r\n        else console.log(` > Full hand, skipping draw`)\r\n        const newLibrary = drawThisTurn ? this.library.slice(1) : this.library\r\n        const newHand = drawThisTurn ? [...this.hand, draw] : this.hand\r\n\r\n        return this.copy({\r\n            turn: this.turn + 1,\r\n            baseEnergy: this.baseEnergy + 1,\r\n             //energy gets reset every turn\r\n            tempEnergy: 0,\r\n            usedEnergy: 0,\r\n            hand: newHand,\r\n            library: newLibrary,\r\n        }).onTurnStart() \r\n    }\r\n\r\n    endTurn() : Game {\r\n        //TODO: Proc onreveals \r\n        const unrevealedCards = this.field.filter(c => c.revealed === false)\r\n        console.log(`Turn ${this.turn} end`)\r\n        return unrevealedCards.reduce((acc, card) => {\r\n            return card.revealCard(acc);\r\n        }, this as Game)\r\n    }\r\n\r\n    //Plays the card, no questions asked\r\n    playCard(card:Card) : Game {\r\n        console.log(` > Playing %c${card.name} %cusing %c${card.getEffectiveCost(this)}/${this.getAvailableEnergy()} %cenergy`, DEBUG.CSS_CARD_NAME, '', DEBUG.CSS_ENERGY, '')\r\n        //We remove the card from hand\r\n        //Add it to the field\r\n        //Add the energy cost to used energy\r\n        //And return the new state\r\n        return this.copy({\r\n            hand : this.hand.filter(c => c !== card),\r\n            field: [...this.field, card],\r\n            usedEnergy: this.usedEnergy + card.getEffectiveCost(this),\r\n        })\r\n    }\r\n\r\n    //Starts turn, plays all of the cards in order (if possible), then ends turn\r\n    playTurn(cards:CardName[]) : Game {\r\n        const start = this.startTurn()\r\n        const playAll = cards.reduce( (acc, cardName) => {\r\n            return acc.playCardIfPossible(cardName);\r\n        }, start)\r\n        return playAll.endTurn()\r\n    }\r\n\r\n    //Checks if we can play the card (have energy, have card in hand), then does so if possible\r\n    //If it's not possible, this is a no-op\r\n    playCardIfPossible(name:CardName) : Game {\r\n        const cardInHand = this.hand.find(c => c.name === name)\r\n        if(cardInHand === undefined) return this.copy()\r\n        if(cardInHand.isPlayable(this)) return this.playCard(cardInHand);\r\n        else return this.copy()\r\n    }\r\n\r\n    getAvailableEnergy():number {\r\n        return this.baseEnergy + this.tempEnergy - this.usedEnergy\r\n    }\r\n}","//https://stackoverflow.com/questions/48083353/i-want-to-know-how-to-shuffle-an-array-in-typescript\r\nexport function shuffle<T>(array: T[]): T[] {\r\n    let currentIndex = array.length,  randomIndex : number;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex !== 0) {\r\n  \r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n};","import Card from \"./Card\";\r\nimport { CardName } from \"../data/cards\";\r\nimport Game from \"./Game\";\r\n\r\nexport interface SimResult {\r\n    iterations : number\r\n    successes : number\r\n    failures : number\r\n    sampleGame: {\r\n        hand:CardName[],\r\n        field:CardName[],\r\n        library:CardName[],\r\n    }\r\n}\r\n\r\nexport interface CardPriority {\r\n    turn1 : CardName[],\r\n    turn2 : CardName[],\r\n    turn3 : CardName[],\r\n    turn4 : CardName[],\r\n    turn5 : CardName[],\r\n    turn6 : CardName[],\r\n    turn7 : CardName[],\r\n}\r\n\r\nexport default abstract class Sim {\r\n    static run(deck:Card[], iterations:number, logic:CardPriority, expected:CardName[], onProgress?:(progress:number)=>void) : SimResult {\r\n\r\n        console.log(\"Run\")\r\n\r\n        let result : SimResult = {\r\n            iterations : 0,\r\n            successes : 0,\r\n            failures : 0,\r\n            sampleGame : {\r\n                hand:[],\r\n                field:[],\r\n                library:[],\r\n            },\r\n        }\r\n\r\n        for(let i =0; i<iterations; i++) {\r\n            result.iterations++\r\n            if(iterations % 10 === 0 && onProgress)\r\n                onProgress(result.iterations / iterations)\r\n            const game = new Game(deck)\r\n            const turn6 = game\r\n                .startGame()\r\n                .playTurn(logic.turn1)\r\n                .playTurn(logic.turn2)\r\n                .playTurn(logic.turn3)\r\n                .playTurn(logic.turn4)\r\n                .playTurn(logic.turn5)\r\n                .playTurn(logic.turn6)\r\n\r\n            //TODO: Think of a better way to handle Magik\r\n            const endState = turn6.field.some(c => c.name === \"Magik\") ? turn6.playTurn(logic.turn7) : turn6;\r\n\r\n            //Check that all of the expected cards are in the field\r\n            const success = expected.every(e => endState.field.some(c => c.name === e))\r\n            // if(endState.field.some(c => c.name === \"Mister Negative\")) \r\n            if(success)\r\n                result.successes++;\r\n            else\r\n                result.failures++;\r\n\r\n            //we save the last run\r\n            result.sampleGame = {\r\n                hand : endState.hand.map(c => c.name),\r\n                field : endState.field.map(c => c.name),\r\n                library : endState.library.map(c => c.name),\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n}","import Card from \"../models/Card\";\r\nimport { CardName } from \"../data/cards\";\r\nimport Sim from \"../models/Sim\";\r\nimport { SimWorkerPayload } from \"./sim\";\r\n\r\n// @ts-ignore\r\nconst self = globalThis as unknown as DedicatedWorkerGlobalScope;\r\n\r\nself.onmessage = (e: MessageEvent<SimWorkerPayload>) => {\r\n    console.log('Worker received:', e.data)\r\n    console.time('worker')\r\n    const cardNames = e.data.cards\r\n    const deck = cardNames.map(c => Card.createFromName(c as CardName))\r\n    let result = Sim.run(deck, e.data.runs, e.data.logic, e.data.expected, (progress) => {\r\n        self.postMessage({type:'progress',progress})\r\n    })\r\n    self.postMessage({type:\"result\", result});\r\n\r\n    console.timeEnd('worker')\r\n    console.log('Worker response sent')\r\n};"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","DEBUG","cardsData","Card","name","effects","energy","power","revealed","onReveal","this","assign","game","cost","field","some","c","Math","max","thisTurn","turn","history","g","getAvailableEnergy","getEffectiveCost","console","log","revealedCard","copy","newBoard","concat","cardData","find","r","baseCard","newHand","hand","map","addHook","oneTimeOnly","onTurnStart","baseEnergy","tempEnergy","items","pull","library","random","newLibrary","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","iter","from","o","minLen","n","toString","slice","test","check","validation","error","errorMessage","Error","Game","deck","hooks","usedEnergy","validateState","newHook","table","shuffledDeck","array","randomIndex","currentIndex","floor","shuffle","openingHand","reduce","acc","hook","afterHook","h","drawThisTurn","draw","unrevealedCards","card","revealCard","cards","start","startTurn","cardName","playCardIfPossible","endTurn","cardInHand","isPlayable","playCard","Sim","iterations","logic","expected","onProgress","result","successes","failures","sampleGame","turn6","startGame","playTurn","turn1","turn2","turn3","turn4","turn5","endState","turn7","every","e","self","globalThis","onmessage","data","time","createFromName","run","runs","progress","postMessage","type","timeEnd"],"sourceRoot":""}